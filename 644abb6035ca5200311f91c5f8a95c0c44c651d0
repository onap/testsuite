{
  "comments": [
    {
      "key": {
        "uuid": "784c000e_8c0e2158",
        "filename": "robot/resources/policy_interface.robot",
        "patchSetId": 1
      },
      "lineNbr": 275,
      "author": {
        "id": 7498
      },
      "writtenOn": "2022-03-11T15:24:54Z",
      "side": 1,
      "message": "I\u0027m trying to understand if this might fail in case undeployment takes a long time. The calls for undeploy and delete are consecutive without any breaks. There might be a situation where you get a 202 Accepted but the undeployment is still processing in the background. In the meanwhile you run the delete request, it\u0027s gonna give you a 406 error. Have you faced this situation intermittently while testing this?\n\nAlso I see your undeploy policy request is running a DELETE call and not POST.",
      "revId": "644abb6035ca5200311f91c5f8a95c0c44c651d0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffc13658_dd05feec",
        "filename": "robot/resources/policy_interface.robot",
        "patchSetId": 1
      },
      "lineNbr": 275,
      "author": {
        "id": 7974
      },
      "writtenOn": "2022-03-11T17:28:01Z",
      "side": 1,
      "message": "I never faced the situation where I get 202 accepted and the process of undeploy policy is still running in the background. I think that situation has never occurred during the execution of tests because the enhanced policy test case is already running cleanup at the end in a similar way i.e consecutively undeploy and delete. \nAlso, the same keywords for cleanup are added initially which runs at the later stage of the test case.\nFor the second query as I mentioned earlier for cleanup i.e undeploy I\u0027m reusing the undeploy step that are already running in the test case before enhancement.",
      "parentUuid": "784c000e_8c0e2158",
      "revId": "644abb6035ca5200311f91c5f8a95c0c44c651d0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f79a1465_1ed93360",
        "filename": "robot/resources/policy_interface.robot",
        "patchSetId": 1
      },
      "lineNbr": 275,
      "author": {
        "id": 7498
      },
      "writtenOn": "2022-03-11T20:46:09Z",
      "side": 1,
      "message": "You\u0027re right - there\u0027s no lag during undeployment. The only situation I can think of is if the undeployment fails for some reason after giving 202 Accepted then the test suite might fail with the situation described above. However, since this test suite is considering a simple sunny day scenario it\u0027s gonna work fine.\n\nThis might be an enhancement for the future though - basically adding another GET call to really verify if the policy has been undeployed.",
      "parentUuid": "ffc13658_dd05feec",
      "revId": "644abb6035ca5200311f91c5f8a95c0c44c651d0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8b91281_cf107f1c",
        "filename": "robot/resources/policy_interface.robot",
        "patchSetId": 1
      },
      "lineNbr": 275,
      "author": {
        "id": 7974
      },
      "writtenOn": "2022-03-14T16:47:39Z",
      "side": 1,
      "message": "I never faced the situation where I get 202 accepted and the process of undeploy policy is still running in the background. I think that situation has never occurred during the execution of tests because the enhanced policy test case is already running cleanup at the end in a similar way i.e consecutively undeploy and delete. \nAlso, the same keywords for cleanup are added initially which runs at the later stage of the test case.\nFor the second query as I mentioned earlier for cleanup i.e undeploy I\u0027m reusing the undeploy step that are already running in the test case before enhancement.",
      "parentUuid": "f79a1465_1ed93360",
      "revId": "644abb6035ca5200311f91c5f8a95c0c44c651d0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}